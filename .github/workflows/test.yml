name: Run Tests

on:
  pull_request:
    branches:
      - 'develop'
      - 'main'
  push:
      branches:
        - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    env:
      DB_DATABASE: test_identidade
      DB_USER: root
      DB_PASSWORD: root

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;" -u$DB_USER -p$DB_PASSWORD

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Set up Laravel environment
        run: cp .env.testing .env

      - name: Generate key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force -v
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: test_identidade
          DB_USERNAME: root
          DB_PASSWORD: root

      - name: Run Pest tests
        run: ./vendor/bin/pest --coverage-clover=coverage.xml
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: test_identidade
          DB_USERNAME: root
          DB_PASSWORD: root

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
